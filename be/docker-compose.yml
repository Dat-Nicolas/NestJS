version: '3.8'

networks:
  appnet:
    driver: bridge

volumes:
  mongodb_data_container:

services:
  api:
    build: .
    container_name: be-api
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BROKERS_INTERNAL: kafka:9092
      KAFKA_TOPIC: test-topic
      ELASTIC_NODE: http://elasticsearch:9200   
      ELASTIC_INDEX: products  
    depends_on:
      mongodb:
        condition: service_started
      redis:
        condition: service_started
      kafka:
        condition: service_healthy
      elasticsearch:                            
        condition: service_healthy
    ports:
      - "8080:8080"
    networks: [appnet]

  mongodb:
    image: mongo:5.0.15
    container_name: be-mongodb-1
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
    networks: [appnet]

  redis:
    image: redis:7.2
    container_name: be-redis-1
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks: [appnet]

  kafka:
    image: bitnami/kafka:3.7
    container_name: be-kafka
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
    ports:
      - "9094:9094"   
    healthcheck:
      test: ["CMD", "bash", "-lc", "echo > /dev/tcp/127.0.0.1/9092"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks: [appnet]

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: be-kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=bkav
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - "8081:8080"
    depends_on:
      kafka:
        condition: service_healthy
    networks: [appnet]
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    container_name: be-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      appnet:
        aliases:
          - elasticsearch            
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 5s
      retries: 20

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.1
    container_name: be-kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks: [appnet]
